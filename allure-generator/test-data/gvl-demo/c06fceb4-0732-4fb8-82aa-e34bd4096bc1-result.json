{"uuid":"c06fceb4-0732-4fb8-82aa-e34bd4096bc1","historyId":"1e35a4d0f2e3b845fb1848e3f4d9ccbd","status":"broken","statusDetails":{"message":"TypeError","trace":"Cannot read property 'status' of undefined"},"stage":"finished","steps":[],"attachments":[],"parameters":[],"labels":[{"name":"thread","value":"2"},{"name":"parentSuite","value":"origin"},{"name":"package","value":"origin"},{"name":"suite","value":"potential"},{"name":"subSuite","value":"POST > functional.test.ts"}],"links":[],"start":1595797256370,"name":"returns list of potential origins, when first and last name is provided.","fullName":"returns list of potential origins, when first and last name is provided.","description":"\n### Test\n```typescript\nasync () => {\n  const response = await CRICKET_API.callApi({\n    endpoint: \"origin/potential\",\n    method: \"POST\",\n    data: {\n      type: \"name\",\n      data: {\n        firstName: ORIGIN_PERSON.firstName,\n        lastName: ORIGIN_PERSON.lastName,\n      },\n    },\n  });\n\n  expect(response).toHaveStatusCode(200);\n  expect(response.duration).toHaveResponseTimeBelow(10);\n  expect(response.data).toStrictEqual(expect.any(Array));\n  expect(response.data.length).toBeGreaterThanOrEqual(1);\n  expect(response.data).toStrictEqual(\n    expect.arrayContaining([\n      expect.objectContaining({\n        id: ORIGIN_PERSON.id,\n        label: ORIGIN_PERSON.label,\n        docCount: 0,\n        mvlConnected: ORIGIN_PERSON.mvlConnected,\n      }),\n    ])\n  );\n  expect(response.data).toMatchSchema(\"response\");\n};\n\n```\n","stop":1595797256381}