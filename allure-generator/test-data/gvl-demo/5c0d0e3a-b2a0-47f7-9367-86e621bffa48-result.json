{"uuid":"5c0d0e3a-b2a0-47f7-9367-86e621bffa48","historyId":"5f5eca1eb1a4103eb3439651576f20ad","status":"broken","statusDetails":{"message":"TypeError","trace":"Cannot read property 'status' of undefined"},"stage":"finished","steps":[],"attachments":[],"parameters":[],"labels":[{"name":"thread","value":"1"},{"name":"parentSuite","value":"animal"},{"name":"package","value":"animal"},{"name":"suite","value":"agentsForAnimal"},{"name":"subSuite","value":"GET > functional.test.ts"}],"links":[],"start":1595797258760,"name":"returns list of agents for an animal, when requested.","fullName":"returns list of agents for an animal, when requested.","description":"\n### Test\n```typescript\nasync () => {\n  const response = await CRICKET_API.callApi({\n    endpoint: `animal/agentsForAnimal/${ANIMAL.id}`,\n    method: \"GET\",\n  });\n\n  expect(response).toHaveStatusCode(200);\n  expect(response.duration).toHaveResponseTimeBelow(10);\n  expect(response.data).toStrictEqual(expect.any(Array));\n  expect(response.data.length).toBeGreaterThanOrEqual(1);\n  expect(response.data).toStrictEqual(\n    expect.arrayContaining([\n      expect.objectContaining({\n        agentId: AGENT_VALUE,\n        agentName: AGENT.person.name,\n      }),\n    ])\n  );\n  expect(response.data).toMatchSchema(\"response\");\n};\n\n```\n","stop":1595797258781}