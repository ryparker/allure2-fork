{"uuid":"ccf59031-cb36-41bb-918e-6b1aa0cb84e5","historyId":"24979d49c45666e1bedff2abe5ff3984","status":"broken","statusDetails":{"message":"TypeError","trace":"Cannot read property 'status' of undefined"},"stage":"finished","steps":[],"attachments":[],"parameters":[],"labels":[{"name":"thread","value":"1"},{"name":"parentSuite","value":"documents"},{"name":"package","value":"documents"},{"name":"suite","value":"GET"},{"name":"subSuite","value":"functional.sort.test.ts"}],"links":[],"start":1595797253547,"name":"sort by 'expiration' in descending order.","fullName":"sort by 'expiration' in descending order.","description":"\n### Test\n```typescript\nasync () => {\n  const response = await CRICKET_API.callApi({\n    endpoint: \"documents\",\n    method: \"GET\",\n    params: {\n      sort: \"-expiration\",\n    },\n  });\n\n  expect(response).toHaveStatusCode(200);\n  expect(response.duration).toHaveResponseTimeBelow(10);\n  expect(response.data).toStrictEqual({\n    count: expect.any(Number),\n    offset: expect.any(Number),\n    limit: expect.any(Number),\n    results: expect.any(Array),\n  });\n  expect(response.data).toMatchSchema(\"expiration-descending-order-response\");\n};\n\n```\n","stop":1595797253553}